class t{textToValueObject(t){return{type:"PARAGRAPH",value:t}}htmlStringToValueObject(t){const e=document.createRange().createContextualFragment(t);return this.getStandardObjectFromDom(e)}htmlDomToValueObject(t){const e={type:this.extractType(t),value:[]};return t.children.length>0?t.children.forEach((t=>{const n=this.htmlDomToValueObject(t);e.value.push(n)})):e.value=t.innerText,e}getStandardObjectFromDom(t){const e=this.htmlDomToValueObject(t);return this.standardFlatValueObject(e)}extractType(t){switch(t.nodeName.toUpperCase()){case"SPAN":case"EM":case"B":return console.log(t.nodeName),"INLINE_TEXT";default:return"PARAGRAPH"}}standardFlatValueObject(t){const e={type:t.type,value:[]};return Array.isArray(t.value)?t.value.forEach((t=>{if(Array.isArray(t.value)){const n=this.standardFlatValueObject(t).value;e.value=[...e.value,...n]}else e.value=[...e.value,t]})):e.value=t.value,e}}class e extends HTMLElement{get value(){return this.editableElement.innerText}set value(t){this.editableElement.innerText=t}constructor(){super(),this.initWebComponent()}initWebComponent(){this._shadowRoot=this.attachShadow({mode:"open"}),this._html="<style>.paragraph-input {\n  min-height: 32px;\n}</style>\n",this._element=document.createElement("template"),this._element.innerHTML=this._html,this._shadowRoot.appendChild(this._element.content.cloneNode(!0)),this.parserHelper=new t,this.initElement()}initElement(){const t=document.createElement("p");t.classList.add("paragraph-input"),t.addEventListener("keypress",this.onKeyPress.bind(this)),t.addEventListener("paste",this.onPaste.bind(this)),t.addEventListener("click",(()=>{this.focus()})),t.addEventListener("blur",(()=>{this.onBlur()})),this.editableElement=t,this._shadowRoot.appendChild(t)}onKeyPress(t){"Enter"==t.key&&(t.preventDefault(),this.callOnEnter())}onPaste(t){console.log("b");const e=t.clipboardData||window.clipboardData;let n=null,a=null;-1!==e.types.findIndex((t=>"text/html"==t))?(n=e.getData("text/html"),a=this.parserHelper.htmlStringToValueObject(n)):-1!==e.types.findIndex((t=>"text/plain"==t))&&(n=e.getData("text/plain"),a=this.parserHelper.textToValueObject(n));const s=this._shadowRoot.getSelection();this.setPasteValue(a,s),t.preventDefault()}setPasteValue(t,e){let n="";if(n="string"==typeof t.value?t.value:t.value[0].value,3===e.anchorNode.nodeType){let a=Math.min(e.anchorOffset,e.extentOffset),s=Math.max(e.anchorOffset,e.extentOffset);const i=this.editableElement.innerText;let r="";if(t.value.length>1){const e=i.substr(s,i.length-1);t.value.push({type:"PARAGRAPH",value:e}),r=i.substr(0,a)+n}else r=i.substr(0,a)+n+i.substr(s,i.length-1);this.editableElement.innerText=r,this.callExtraDataEvent(t.value.slice(1,t.value.length),"APPEND_AFTER")}}callExtraDataEvent(t,e){const n=new CustomEvent("extraData",{detail:{action:e,data:t}});this.dispatchEvent(n)}callOnEnter(){const t=new CustomEvent("enter");this.dispatchEvent(t)}static get observedAttributes(){return[]}attributeChangedCallback(t,e,n){this.onAttributeChange(t,n)}onAttributeChange(t,e){}focus(){this.editableElement.contentEditable=!0,this.editableElement.focus()}onBlur(){this.editableElement.contentEditable=!1}}!customElements.get("jb-editor-paragraph-input")&&window.customElements.define("jb-editor-paragraph-input",e);class n{constructor({createInput:t,handleExtraData:e}){this.createInput=t,this.handleExtraData=e}getElementIndex(t){for(var e=0;t=t.previousElementSibling;)e++;return e}createParagraphInput(t){const e=document.createElement("jb-editor-paragraph-input");return t&&(e.value=t),e.addEventListener("enter",(t=>{const n=this.getElementIndex(e);this.createInput("PARAGRAPH",null,n).focus()})),e.addEventListener("extraData",(t=>{this.handleExtraData(t)})),e}}class a extends HTMLElement{static get formAssociated(){return!0}get value(){return this._elements.content.inputs.map((t=>t.value)),this.value}constructor(){super(),"function"==typeof this.attachInternals&&(this.internals_=this.attachInternals()),this.inputFactory=new n({createInput:this.createInput.bind(this),handleExtraData:this.handleExtraData.bind(this)}),this.parserHelper=new t,this.initWebComponent()}connectedCallback(){this.callOnLoadEvent(),this.initProp(),this.callOnInitEvent()}callOnLoadEvent(){var t=new CustomEvent("load",{bubbles:!0,composed:!0});this.dispatchEvent(t)}callOnInitEvent(){var t=new CustomEvent("init",{bubbles:!0,composed:!0});this.dispatchEvent(t)}initWebComponent(){this._shadowRoot=this.attachShadow({mode:"open"}),this._html='<style>.jb-editor-web-component {\n  direction: rtl;\n  width: 100%;\n  height: 100%;\n  background-color: lightseagreen;\n}\n.jb-editor-web-component .content-wrapper {\n  width: 100%;\n  height: 100%;\n  padding: 16px;\n  box-sizing: border-box;\n}</style>\n<div class="jb-editor-web-component">\r\n    <div class="content-wrapper">\r\n    </div>\r\n</div>',this._element=document.createElement("template"),this._element.innerHTML=this._html,this._shadowRoot.appendChild(this._element.content.cloneNode(!0)),this._elements={content:{wrapper:this._shadowRoot.querySelector(".content-wrapper"),inputs:[]}},this.initEditor(),this.registerEventListener()}initEditor(){this._elements.content.wrapper.addEventListener("paste",this.onPaste.bind(this)),this.createInput()}onPaste(t){const e=t.clipboardData||window.clipboardData;let n=null;-1!==e.types.findIndex((t=>"text/html"==t))?(n=e.getData("text/html"),this.parserHelper.htmlStringToValueObject(n)):-1!==e.types.findIndex((t=>"text/plain"==t))&&(n=e.getData("text/plain"),this.parserHelper.textToValueObject(n));"Caret"!=this._shadowRoot.getSelection().type?(console.log("a"),t.preventDefault()):t.preventDefault()}createInput(t,e,n){const a=n||this._elements.content.inputs.length,s=this.inputFactory.createParagraphInput(e);return s._JBEditorDetail={uniqSymbol:Symbol()},a==this._elements.content.inputs.length?this._elements.content.wrapper.appendChild(s):this._elements.content.wrapper.insertBefore(s,this._elements.content.wrapper.children[a+1]),this._elements.content.inputs.splice(a,0,s),s}handleExtraData(t){const{action:e,data:n}=t.detail;if("APPEND_AFTER"==e){const e=this.inputFactory.getElementIndex(t.target);n.forEach((t=>{this.createInput(t.type,t.value,e)}))}}registerEventListener(){}initProp(){}static get observedAttributes(){return[]}attributeChangedCallback(t,e,n){this.onAttributeChange(t,n)}onAttributeChange(t,e){}}!customElements.get("jb-editor")&&window.customElements.define("jb-editor",a);
//# sourceMappingURL=JBEditor.js.map
