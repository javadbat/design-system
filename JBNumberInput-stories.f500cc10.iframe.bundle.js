"use strict";(self.webpackChunkstorybook=self.webpackChunkstorybook||[]).push([[324],{"./stories/JBNumberInput.stories.tsx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{NonNegativeNumberWithUnderlineSeparato:()=>NonNegativeNumberWithUnderlineSeparato,Normal:()=>Normal,NumberWithButtons:()=>NumberWithButtons,NumberWithComma:()=>NumberWithComma,NumberWithMinMax:()=>NumberWithMinMax,NumberWithPersianChar:()=>NumberWithPersianChar,WithEndSection:()=>WithEndSection,WithStartAndEndSection:()=>WithStartAndEndSection,WithStartSection:()=>WithStartSection,__namedExportsOrder:()=>__namedExportsOrder,default:()=>__WEBPACK_DEFAULT_EXPORT__,numberTest:()=>numberTest});var react__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./node_modules/react/index.js"),jb_number_input_react__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("../../web-component/jb-number-input/react/index.js"),_pages_JBInput_JBInputNumberTest__WEBPACK_IMPORTED_MODULE_2__=__webpack_require__("./stories/pages/JBInput/JBInputNumberTest.jsx");const __WEBPACK_DEFAULT_EXPORT__={title:"Example/form elements/Inputs/JBNumberInput",component:jb_number_input_react__WEBPACK_IMPORTED_MODULE_1__.a},Normal={args:{label:"label",message:"static text under input show all the time",placeholder:"place holder",disabled:!1,onChange:e=>{console.log(`new number is ${e.target.value}`)}}},NumberWithComma={args:{label:"تعداد به عدد",message:"هر سه رقم با کاما جدا میگردند",showThousandSeparator:!0,onChange:e=>{console.log(`new number is ${e.target.value}`)}}},NumberWithMinMax={args:{label:"تعداد به عدد",message:"عدد بین 100 تا 10000",maxValue:1e4,minValue:100,onChange:e=>{console.log(`new number is ${e.target.value}`)}}},NonNegativeNumberWithUnderlineSeparato={args:{label:"تعداد به عدد",message:"هر سه رقم با خط تیره جدا میگردند",acceptNegative:!1,showThousandSeparator:!0,thousandSeparator:"_",onChange:e=>{console.log(`new number is ${e.target.value}`)}}},NumberWithButtons={args:{label:"عددی با دکمه",message:"دکمه های +-",type:"number",showControlButton:!0,step:100,onChange:e=>{console.log(`new number is ${e.target.value}`)}}},NumberWithPersianChar={args:{label:"type number",message:"type en number but user see persian char number",type:"number",showPersianNumber:!0,onChange:e=>{console.log(`new number is ${e.target.value}`)}}},numberTest={render:()=>react__WEBPACK_IMPORTED_MODULE_0__.createElement(_pages_JBInput_JBInputNumberTest__WEBPACK_IMPORTED_MODULE_2__.A,null)},WithStartSection={render:args=>react__WEBPACK_IMPORTED_MODULE_0__.createElement(jb_number_input_react__WEBPACK_IMPORTED_MODULE_1__.a,args,react__WEBPACK_IMPORTED_MODULE_0__.createElement("div",{slot:"start-section",style:{width:"24px",height:"24px",backgroundColor:"#262626"}})),args:{label:"label",message:"static text under input show all the time",placeholder:"place holder"}},WithEndSection={render:args=>react__WEBPACK_IMPORTED_MODULE_0__.createElement(jb_number_input_react__WEBPACK_IMPORTED_MODULE_1__.a,args,react__WEBPACK_IMPORTED_MODULE_0__.createElement("div",{slot:"end-section",style:{width:"24px",height:"24px",backgroundColor:"#262626"}})),args:{label:"label",message:"static text under input show all the time",placeholder:"place holder"}},WithStartAndEndSection={render:args=>react__WEBPACK_IMPORTED_MODULE_0__.createElement(jb_number_input_react__WEBPACK_IMPORTED_MODULE_1__.a,args,react__WEBPACK_IMPORTED_MODULE_0__.createElement("div",{slot:"end-section",style:{width:"24px",height:"24px",backgroundColor:"#262626"}}),react__WEBPACK_IMPORTED_MODULE_0__.createElement("div",{slot:"start-section",style:{width:"24px",height:"24px",backgroundColor:"#262626"}})),args:{label:"label",message:"static text under input show all the time",placeholder:"place holder"}},__namedExportsOrder=["Normal","NumberWithComma","NumberWithMinMax","NonNegativeNumberWithUnderlineSeparato","NumberWithButtons","NumberWithPersianChar","numberTest","WithStartSection","WithEndSection","WithStartAndEndSection"];Normal.parameters={...Normal.parameters,docs:{...Normal.parameters?.docs,source:{originalSource:"{\n  args: {\n    label: 'label',\n    message: 'static text under input show all the time',\n    placeholder: 'place holder',\n    disabled: false,\n    onChange: e => {\n      console.log(`new number is ${e.target.value}`);\n    }\n  }\n}",...Normal.parameters?.docs?.source}}},NumberWithComma.parameters={...NumberWithComma.parameters,docs:{...NumberWithComma.parameters?.docs,source:{originalSource:"{\n  args: {\n    label: 'تعداد به عدد',\n    message: 'هر سه رقم با کاما جدا میگردند',\n    showThousandSeparator: true,\n    onChange: e => {\n      console.log(`new number is ${e.target.value}`);\n    }\n  }\n}",...NumberWithComma.parameters?.docs?.source}}},NumberWithMinMax.parameters={...NumberWithMinMax.parameters,docs:{...NumberWithMinMax.parameters?.docs,source:{originalSource:"{\n  args: {\n    label: 'تعداد به عدد',\n    message: 'عدد بین 100 تا 10000',\n    maxValue: 10000,\n    minValue: 100,\n    onChange: e => {\n      console.log(`new number is ${e.target.value}`);\n    }\n  }\n}",...NumberWithMinMax.parameters?.docs?.source}}},NonNegativeNumberWithUnderlineSeparato.parameters={...NonNegativeNumberWithUnderlineSeparato.parameters,docs:{...NonNegativeNumberWithUnderlineSeparato.parameters?.docs,source:{originalSource:"{\n  args: {\n    label: 'تعداد به عدد',\n    message: 'هر سه رقم با خط تیره جدا میگردند',\n    acceptNegative: false,\n    showThousandSeparator: true,\n    thousandSeparator: '_',\n    onChange: e => {\n      console.log(`new number is ${e.target.value}`);\n    }\n  }\n}",...NonNegativeNumberWithUnderlineSeparato.parameters?.docs?.source}}},NumberWithButtons.parameters={...NumberWithButtons.parameters,docs:{...NumberWithButtons.parameters?.docs,source:{originalSource:"{\n  args: {\n    label: 'عددی با دکمه',\n    message: 'دکمه های +-',\n    type: 'number',\n    showControlButton: true,\n    step: 100,\n    onChange: e => {\n      console.log(`new number is ${e.target.value}`);\n    }\n  }\n}",...NumberWithButtons.parameters?.docs?.source}}},NumberWithPersianChar.parameters={...NumberWithPersianChar.parameters,docs:{...NumberWithPersianChar.parameters?.docs,source:{originalSource:"{\n  args: {\n    label: 'type number',\n    message: 'type en number but user see persian char number',\n    type: 'number',\n    showPersianNumber: true,\n    onChange: e => {\n      console.log(`new number is ${e.target.value}`);\n    }\n  }\n}",...NumberWithPersianChar.parameters?.docs?.source}}},numberTest.parameters={...numberTest.parameters,docs:{...numberTest.parameters?.docs,source:{originalSource:"{\n  render: () => <JBInputNumberTest></JBInputNumberTest>\n}",...numberTest.parameters?.docs?.source}}},WithStartSection.parameters={...WithStartSection.parameters,docs:{...WithStartSection.parameters?.docs,source:{originalSource:"{\n  render: args => {\n    return <JBNumberInput {...args}>\n        <div slot=\"start-section\" style={{\n        width: '24px',\n        height: '24px',\n        backgroundColor: '#262626'\n      }}></div>\n      </JBNumberInput>;\n  },\n  args: {\n    label: 'label',\n    message: 'static text under input show all the time',\n    placeholder: 'place holder'\n  }\n}",...WithStartSection.parameters?.docs?.source}}},WithEndSection.parameters={...WithEndSection.parameters,docs:{...WithEndSection.parameters?.docs,source:{originalSource:"{\n  render: args => {\n    return <JBNumberInput {...args}>\n        <div slot=\"end-section\" style={{\n        width: '24px',\n        height: '24px',\n        backgroundColor: '#262626'\n      }}></div>\n      </JBNumberInput>;\n  },\n  args: {\n    label: 'label',\n    message: 'static text under input show all the time',\n    placeholder: 'place holder'\n  }\n}",...WithEndSection.parameters?.docs?.source}}},WithStartAndEndSection.parameters={...WithStartAndEndSection.parameters,docs:{...WithStartAndEndSection.parameters?.docs,source:{originalSource:"{\n  render: args => {\n    return <JBNumberInput {...args}>\n        <div slot=\"end-section\" style={{\n        width: '24px',\n        height: '24px',\n        backgroundColor: '#262626'\n      }}></div>\n        <div slot=\"start-section\" style={{\n        width: '24px',\n        height: '24px',\n        backgroundColor: '#262626'\n      }}></div>\n      </JBNumberInput>;\n  },\n  args: {\n    label: 'label',\n    message: 'static text under input show all the time',\n    placeholder: 'place holder'\n  }\n}",...WithStartAndEndSection.parameters?.docs?.source}}}}}]);