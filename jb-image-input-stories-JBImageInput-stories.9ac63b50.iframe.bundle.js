"use strict";(self.webpackChunkstorybook=self.webpackChunkstorybook||[]).push([[8964],{"../../web-component/jb-core/react/index.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{_q:()=>r});var react=__webpack_require__("./node_modules/react/index.js");function r(n,u,c,l=!1){let o=(0,react.useCallback)((e=>{n.current&&"function"==typeof c&&c(e)}),[n,c]);(0,react.useEffect)((()=>{let e=n.current;return e&&e.addEventListener(u,o,{passive:l,capture:!1}),function(){e&&e.removeEventListener(u,o,{passive:l,capture:!1})}}),[n,u,c,l])}},"../../web-component/jb-image-input/stories/JBImageInput.stories.tsx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{ActionTest:()=>ActionTest,Normal:()=>Normal,WithPlaceHolder:()=>WithPlaceHolder,__namedExportsOrder:()=>__namedExportsOrder,default:()=>JBImageInput_stories});var react=__webpack_require__("./node_modules/react/index.js"),jb_image_input_react=__webpack_require__("../../web-component/jb-image-input/react/index.js"),axios=__webpack_require__("../../node_modules/axios/index.js"),axios_default=__webpack_require__.n(axios);const bridge={uploader:(file,config)=>new Promise(((resolve,reject)=>{var formData=new FormData;formData.append("image",file),axios_default().post("http://localhost:3200/image/upload",formData,{headers:{"Content-Type":"multipart/form-data"}}).then((response=>{resolve(response.data.fileName.path)})).catch((err=>{console.error(err)}))})),downloader:(value,config)=>new Promise(((resolve,reject)=>{axios_default().get("http://localhost:3200/image/download",{params:{imagePath:value},responseType:"blob"}).then((response=>{var reader=new window.FileReader;reader.readAsDataURL(response.data),reader.onload=function(){var imageDataUrl=reader.result;resolve(imageDataUrl)}})).catch((err=>{console.error(err)}))}))};function JBImageInputActionTest(props){function onchange(e){console.log("image changed")}return react.createElement("div",null,react.createElement(jb_image_input_react.a,{bridge,onChange:onchange,config:{}}),react.createElement("h3",null,"with 2MB max size limit"),react.createElement(jb_image_input_react.a,{bridge,onChange:onchange,config:{},maxFileSize:2097152,onMaxSizeExceed:function onMaxSizeExceed(e){console.error(`your file size   is not valid your size is:${e.detail.file.size}`)}}))}JBImageInputActionTest.propTypes={};const stories_JBImageInputActionTest=JBImageInputActionTest;JBImageInputActionTest.__docgenInfo={description:"",methods:[],displayName:"JBImageInputActionTest"};const JBImageInput_stories={title:"Example/form elements/JBImageInput",component:jb_image_input_react.a},Normal={args:{acceptTypes:"image/jpeg,image/jpg,image/png,image/svg+xml",message:"extra message"}},ActionTest={render:args=>react.createElement(stories_JBImageInputActionTest,args)},WithPlaceHolder={render:args=>react.createElement(jb_image_input_react.a,args,react.createElement("div",{slot:"placeholder",style:{width:"100%",height:"100%"}},react.createElement("div",{style:{width:"100%",height:"100%",background:"red",display:"flex",justifyContent:"center",alignItems:"center"}},"custom placeholder")))},__namedExportsOrder=["Normal","ActionTest","WithPlaceHolder"];Normal.parameters={...Normal.parameters,docs:{...Normal.parameters?.docs,source:{originalSource:'{\n  args: {\n    acceptTypes: "image/jpeg,image/jpg,image/png,image/svg+xml",\n    message: "extra message"\n  }\n}',...Normal.parameters?.docs?.source}}},ActionTest.parameters={...ActionTest.parameters,docs:{...ActionTest.parameters?.docs,source:{originalSource:"{\n  render: args => <JBImageInputActionTest {...args}></JBImageInputActionTest>\n}",...ActionTest.parameters?.docs?.source}}},WithPlaceHolder.parameters={...WithPlaceHolder.parameters,docs:{...WithPlaceHolder.parameters?.docs,source:{originalSource:"{\n  render: args => <JBImageInput {...args}>\n      <div slot=\"placeholder\" style={{\n      width: '100%',\n      height: '100%'\n    }}>\n        <div style={{\n        width: '100%',\n        height: '100%',\n        background: 'red',\n        display: 'flex',\n        justifyContent: 'center',\n        alignItems: 'center'\n      }}>custom placeholder</div>\n      </div>\n    </JBImageInput>\n}",...WithPlaceHolder.parameters?.docs?.source}}}},"../../web-component/jb-validation/dist/jb-validation.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{function a(i,t,a){const l={validationList:[],isAllValid:!0},e=i=>{l.validationList.push(i),i.isValid||(l.isAllValid=!1)},n=i.filter((i=>!0===i.defer)),o=i.filter((i=>!0!==i.defer)),r=[];for(const i of o){const l=s(t,i,a);l instanceof Promise?r.push(l):e(l)}if(l.isAllValid)for(const i of n){const l=s(t,i,a);l instanceof Promise?r.push(l):e(l)}return{syncValidationResult:l,asyncList:r}}function s(i,t,a){let s,e=t.message;if(t.validator instanceof RegExp){const l="string"==typeof i?i:a(i);s=t.validator.test(l),t.validator.lastIndex=0}if("function"==typeof t.validator){const a=function l(i,t){function a(i){let t=null;return"string"==typeof i&&i.length>0&&(t=i),{isValid:"string"==typeof i?0==i.length:i,message:t}}const s=i(t);return s instanceof Promise?new Promise((i=>{s.then((t=>{i(a(t))}))})):a(s)}(t.validator,i);if(a instanceof Promise)return new Promise((i=>{a.then((a=>{i({isValid:a.isValid,message:a.message,validation:t})}))}));s=a.isValid,e=a.message??e}return void 0===t.validator&&(s=!1),s?{isValid:!0,message:"",validation:t}:{isValid:!1,message:e,validation:t}}__webpack_require__.d(__webpack_exports__,{EQ:()=>e});var e=class{#i=[];#t={isValid:null,message:null};get resultSummary(){return this.#t}result=null;#a={clearValidationError:[],getValue:()=>null,getValidations:[],getValueString:()=>"",setValidationResult:[],showValidationError:[]};get#s(){return[...this.#l(),...this.#i]}constructor(i){this.setCallbacks(i)}setCallbacks(i){Object.keys(i).forEach((t=>{"function"==typeof i[t]&&void 0!==this.#a[t]&&(Array.isArray(this.#a[t])?this.#a[t].push(i[t]):this.#a[t]=i[t])}))}get list(){return this.#i}set list(i){this.#i=i,this.checkValidity({showError:!1})}async checkValidity(i){const t=i?.value||await Promise.resolve(this.#a.getValue()),a=await this.#e(t);return this.#n(a,i),a}checkValiditySync(i){const t=i?.value||this.#a.getValue(),a=this.#o(t);return this.#n(a,i),a}#n(i,t){if(this.#t={isValid:i.isAllValid,message:null},i.isAllValid)this.#a.clearValidationError.forEach((i=>i()));else{const a=i.validationList.find((i=>!i.isValid));this.resultSummary.message=a.message,!1!==t?.showError&&this.#a.showValidationError.forEach((i=>i({message:a.message})))}this.result=i,this.#a.setValidationResult.forEach((t=>t(i)))}addValidationListGetter(i){this.#a.getValidations.push(i)}#l(){const i=[];return this.#a.getValidations.forEach((t=>{"function"==typeof t&&i.push(...t())})),i.flat()}async#e(i){return await async function t(i,t,s){const{syncValidationResult:l,asyncList:e}=a(i,t,s);for(const i of e){const t=await i;l.isAllValid=l.isAllValid&&t.isValid,l.validationList.push(t)}return l}(this.#s,i,this.#a.getValueString)}#o(t){return function i(i,t,s){const{syncValidationResult:l}=a(i,t,s);return l}(this.#s,t,this.#a.getValueString)}}}}]);