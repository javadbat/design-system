var X=Object.defineProperty;var S=a=>{throw TypeError(a)};var Y=(a,e,t)=>e in a?X(a,e,{enumerable:!0,configurable:!0,writable:!0,value:t}):a[e]=t;var f=(a,e,t)=>Y(a,typeof e!="symbol"?e+"":e,t),j=(a,e,t)=>e.has(a)||S("Cannot "+t);var r=(a,e,t)=>(j(a,e,"read from private field"),t?t.call(a):e.get(a)),h=(a,e,t)=>e.has(a)?S("Cannot add the same private member more than once"):e instanceof WeakSet?e.add(a):e.set(a,t),u=(a,e,t,s)=>(j(a,e,"write to private field"),s?s.call(a,t):e.set(a,t),t),d=(a,e,t)=>(j(a,e,"access private method"),t);import{R as k,r as o}from"./index-0yr9KlQE.js";import{e as Z}from"./jb-validation-BFHHOeHY.js";import{j as ee}from"./index-C1o-zhIV.js";var c,b,p,l,v,m,n,z,$,G,K,Q,U,A,te=(A=class extends HTMLElement{constructor(){super();h(this,n);h(this,c,!1);h(this,b,null);f(this,"elements");h(this,p,!1);h(this,l);h(this,v,new Z({clearValidationError:this.clearValidationError.bind(this),getValue:()=>this.value,getValidations:d(this,n,U).bind(this),getValueString:()=>this.value?"true":"false",setValidationResult:d(this,n,Q).bind(this),showValidationError:this.showValidationError.bind(this)}));f(this,"initialValue",!1);h(this,m,!1);f(this,"isAutoValidationDisabled",!1);typeof this.attachInternals=="function"&&u(this,l,this.attachInternals()),this.initWebComponent()}static get formAssociated(){return!0}get value(){return r(this,b)!==null?r(this,b):r(this,c)}set value(e){var t,s;r(this,c)!==e&&u(this,c,e),d(this,n,K).call(this),r(this,l)&&(r(this,l).ariaSelected=e?"true":"false",e?(t=r(this,l).states)==null||t.add("checked"):(s=r(this,l).states)==null||s.delete("checked"),typeof r(this,l).setFormValue=="function"&&r(this,l).setFormValue(`${e}`))}get validation(){return r(this,v)}get name(){return this.getAttribute("name")||""}get isDirty(){return r(this,c)!==this.initialValue}set required(e){u(this,m,e),r(this,v).checkValiditySync({showError:!1})}get required(){return r(this,m)}get disabled(){return r(this,p)}set disabled(e){var t,s;u(this,p,e),e?((t=r(this,l).states)==null||t.add("disabled"),r(this,l).ariaDisabled="true"):((s=r(this,l).states)==null||s.delete("disabled"),r(this,l).ariaDisabled="false")}connectedCallback(){this.callOnLoadEvent(),this.initProp(),this.callOnInitEvent()}callOnLoadEvent(){const e=new CustomEvent("load",{bubbles:!0,composed:!0});this.dispatchEvent(e)}callOnInitEvent(){const e=new CustomEvent("init",{bubbles:!0,composed:!0});this.dispatchEvent(e)}initWebComponent(){const e=this.attachShadow({mode:"open",delegatesFocus:!0});ee();const t=document.createElement("template");t.innerHTML=`<style>.jb-checkbox-web-component{cursor:pointer;flex-direction:row;justify-content:start;align-items:center;gap:8px;display:flex}.jb-checkbox-web-component .label-wrapper{color:var(--label-color);font-weight:400;display:inline-block}.jb-checkbox-web-component .svg-wrapper{width:30px;height:30px;margin-left:8px}.jb-checkbox-web-component .svg-wrapper .check-box-svg{cursor:pointer;width:30px;height:30px}.jb-checkbox-web-component .svg-wrapper .check-box-svg.--active .checkmark__cube{rx:58px;ry:58px;stroke:#0000;transition:all .3s ease-in-out}.jb-checkbox-web-component .svg-wrapper .check-box-svg.--active .checkmark__check{animation:.3s cubic-bezier(.65,0,.45,1) .1s forwards stroke}.jb-checkbox-web-component .svg-wrapper .check-box-svg .checkmark__cube{fill:var(--check-bg-color);stroke:var(--check-border-color);stroke-width:1px;transition:all .3s ease-in-out}.jb-checkbox-web-component .svg-wrapper .check-box-svg .checkmark__check{stroke-width:5px;stroke:var(--check-mark-color);transform-origin:50%;stroke-dasharray:48;stroke-dashoffset:48px}@keyframes stroke{to{stroke-dashoffset:0}} :host{--label-color:var(--jb-checkbox-label-color,var(--jb-neutral-5));--check-bg-color:var(--jb-checkbox-check-bg-color,var(--jb-white));--check-border-color:var(--jb-checkbox-check-border-color,var(--jb-neutral-7));--check-mark-color:var(--jb-checkbox-check-mark-color,var(--jb-text-contrast))}:host(:state(checked)){--label-color:var(--jb-checkbox-label-color,var(--jb-text-primary));--check-bg-color:var(--jb-checkbox-check-bg-color-checked,var(--jb-green));--check-mark-color:var(--jb-checkbox-check-mark-color-checked,var(--jb-white))}:host(:state(disabled)){--check-bg-color:var(--jb-checkbox-check-bg-color-disabled,var(--jb-neutral-9))}</style>

  <div class="jb-checkbox-web-component">
  <div class="svg-wrapper">
    <svg class="check-box-svg" viewBox="0 0 52 52" part="checkbox">
      <rect class="checkmark__cube" x="0" y="0" width="52" height="52" rx="5" ry="5" part="check-bg"/>
      <path class="checkmark__check" fill="none" d="M14.1 27.2l7.1 7.2 16.7-16.8" part="check-mark"/>
    </svg>
  </div>
  <div class="label-wrapper" >
    <slot name="label" part="label"></slot>
  </div>
</div>
  `,e.appendChild(t.content.cloneNode(!0)),this.elements={componentWrapper:e.querySelector(".jb-checkbox-web-component"),label:e.querySelector(".label-wrapper slot"),svgWrapper:e.querySelector(".svg-wrapper"),svg:e.querySelector(".check-box-svg")},this.registerEventListener()}registerEventListener(){this.elements.componentWrapper.addEventListener("click",()=>d(this,n,z).call(this))}initProp(){this.value=this.getAttribute("value")==="true"||!1}static get observedAttributes(){return["label","value","name","disabled"]}attributeChangedCallback(e,t,s){this.onAttributeChange(e,s)}onAttributeChange(e,t){switch(e){case"value":this.value=!!t;break;case"label":this.elements.label.innerText=t,r(this,l).ariaLabel=t;break;case"disabled":t==""||t==="true"?this.disabled=!0:t!="false"&&t!=null&&t!=null||(this.disabled=!1)}}focus(){}showValidationError(e){}clearValidationError(){}get validationMessage(){return r(this,l).validationMessage}checkValidity(){return r(this,v).checkValiditySync({showError:!1}).isAllValid}reportValidity(){return r(this,v).checkValiditySync({showError:!0}).isAllValid}},c=new WeakMap,b=new WeakMap,p=new WeakMap,l=new WeakMap,v=new WeakMap,m=new WeakMap,n=new WeakSet,z=function(){if(r(this,p))return;u(this,b,!r(this,c));const e=d(this,n,$).call(this);u(this,b,null),e||(this.value=!r(this,c),d(this,n,G).call(this).defaultPrevented&&(this.value=!r(this,c)))},$=function(){const e=new CustomEvent("before-change",{cancelable:!0});return this.dispatchEvent(e),e.defaultPrevented},G=function(){const e=new Event("change",{bubbles:!0,cancelable:!0,composed:!0});return this.dispatchEvent(e),e},K=function(){this.value?this.elements.svg.classList.add("--active"):this.elements.svg.classList.remove("--active")},Q=function(e){if(e.isAllValid)r(this,l).setValidity({},"");else{const t={};let s="";e.validationList.forEach(i=>{i.isValid||(i.validation.stateType&&(t[i.validation.stateType]=!0),s==""&&(s=i.message))}),r(this,l).setValidity(t,s)}},U=function(){return r(this,m)?[{validator:e=>e!==!1,message:"چک میبایست فعال شود"}]:[]},A);customElements.get("jb-checkbox")||window.customElements.define("jb-checkbox",te);function L(a,e,t,s=!1){let i=o.useCallback(g=>{a.current&&typeof t=="function"&&t(g)},[a,t]);o.useEffect(()=>{let g=a.current;return g&&g.addEventListener(e,i,{passive:s,capture:!1}),function(){g&&g.removeEventListener(e,i,{passive:s,capture:!1})}},[a,e,t,s])}let V=k.forwardRef((a,e)=>{let t=o.useRef(null),[s,i]=o.useState(0);return o.useImperativeHandle(e,()=>t?t.current:void 0,[t]),o.useEffect(()=>{i(s+1)},[t.current]),o.useEffect(()=>{t.current&&a.value!==null&&a.value!==void 0&&(t.current.value=a.value)},[a.value]),o.useEffect(()=>{t.current&&typeof a.style=="string"&&t.current.setAttribute("style",a.style)},[a.style]),o.useEffect(()=>{t.current&&typeof a.name=="string"?t.current.setAttribute("name",a.name):t.current&&a.name==null&&t.current.removeAttribute("name")},[a.name]),o.useEffect(()=>{t.current&&(t.current.disabled=!!a.disabled)},[t.current,a.disabled]),o.useEffect(()=>{t.current&&Array.isArray(a.validationList)&&(t.current.validation.list=a.validationList)},[a.validationList]),L(t,"before-change",a.onBeforeChange,!0),L(t,"change",a.onChange,!0),k.createElement("jb-checkbox",{class:a.className?a.className:"",label:a.label?a.label:"",ref:t},a.children)});V.displayName="JBSwitch";function ae(a){const[e,t]=o.useState("");return k.createElement(V,{label:a.label,value:e,onChange:s=>{t(s.target.value)}})}const oe={title:"Components/form elements/JBCheckbox",component:V},x={args:{label:"چک",onChange:a=>{console.log("onChange",a.target.value)}}},w={args:{label:"disabled",disabled:!0,onChange:a=>{console.log("onChange",a.target.value)}}},E={args:{label:"disabled with true value",value:!0,disabled:!0,onChange:a=>{console.log("onChange",a.target.value)}}},y={args:{children:k.createElement("div",{style:{color:"blue"},slot:"label"},"label in children"),onChange:a=>{console.log("onChange",a.target.value)}}},C={render:a=>k.createElement(ae,{...a}),args:{label:"چک باکس"}};var _,T,B;x.parameters={...x.parameters,docs:{...(_=x.parameters)==null?void 0:_.docs,source:{originalSource:`{
  args: {
    label: 'چک',
    onChange: e => {
      console.log('onChange', e.target.value);
    }
  }
}`,...(B=(T=x.parameters)==null?void 0:T.docs)==null?void 0:B.source}}};var D,q,N;w.parameters={...w.parameters,docs:{...(D=w.parameters)==null?void 0:D.docs,source:{originalSource:`{
  args: {
    label: 'disabled',
    disabled: true,
    onChange: e => {
      console.log('onChange', e.target.value);
    }
  }
}`,...(N=(q=w.parameters)==null?void 0:q.docs)==null?void 0:N.source}}};var I,J,M;E.parameters={...E.parameters,docs:{...(I=E.parameters)==null?void 0:I.docs,source:{originalSource:`{
  args: {
    label: 'disabled with true value',
    value: true,
    disabled: true,
    onChange: e => {
      console.log('onChange', e.target.value);
    }
  }
}`,...(M=(J=E.parameters)==null?void 0:J.docs)==null?void 0:M.source}}};var O,R,W;y.parameters={...y.parameters,docs:{...(O=y.parameters)==null?void 0:O.docs,source:{originalSource:`{
  args: {
    children: <div style={{
      color: 'blue'
    }} slot="label">label in children</div>,
    onChange: e => {
      console.log('onChange', e.target.value);
    }
  }
}`,...(W=(R=y.parameters)==null?void 0:R.docs)==null?void 0:W.source}}};var P,F,H;C.parameters={...C.parameters,docs:{...(P=C.parameters)==null?void 0:P.docs,source:{originalSource:`{
  render: args => <JBCheckboxTest {...args}></JBCheckboxTest>,
  args: {
    label: 'چک باکس'
  }
}`,...(H=(F=C.parameters)==null?void 0:F.docs)==null?void 0:H.source}}};const ce=["Normal","Disabled","DisabledTrue","ChildrenLabel","TestCheckbox"];export{y as ChildrenLabel,w as Disabled,E as DisabledTrue,x as Normal,C as TestCheckbox,ce as __namedExportsOrder,oe as default};
